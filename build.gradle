buildscript {
    repositories {
    	mavenCentral()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'

group 'com.remondis'
version PROJECT_VERSION
description 'A declarative mapping library for converting objects field by field. '

repositories {
    mavenLocal()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

// Doclint enforces generic parameter documentations that are redundant.
if (JavaVersion.current().isJava8Compatible()) {
   allprojects {
     tasks.withType(Javadoc) {
       options.addStringOption('Xdoclint:none', '-quiet')
     }
   }
}

dependencies {
    compile "cglib:cglib:3.2.6"

    testCompile "org.projectlombok:lombok:1.16.20"
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.18.0"
    testCompile "org.assertj:assertj-core:3.9.1"

    testCompile "org.springframework:spring-test:4.3.16.RELEASE"
    testCompile "org.springframework:spring-context:4.3.16.RELEASE"
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
        }
    }
}


checkstyle {
    configFile = rootProject.file("shared/config/checkstyle/checkstyle.xml")
    toolVersion = "7.7"
    maxErrors = 0
    maxWarnings = 0
    sourceSets = [project.sourceSets.main]
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

jar {
    manifest {
         attributes("Bundle-Vendor": "REMONDIS IT Services GmbH & Co. KG",
                    "Bundle-DocURL": "https://github.com/remondis-it/remap",
                    "Automatic-Module-Name": "com.remondis.remap")
    }
}


publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.remondis'
            artifactId 'remap'
            version PROJECT_VERSION
			pom.withXml {
            // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
            configurations.implementation.allDependencies.each {
               // Ensure dependencies such as fileTree are not included.
               if (it.name != 'unspecified') {
                  def dependencyNode = dependenciesNode.appendNode('dependency')
                  dependencyNode.appendNode('groupId', it.group)
                  dependencyNode.appendNode('artifactId', it.name)
                  dependencyNode.appendNode('version', it.version)
               }
            }
          }
        }
    }
}



bintray {
	user = System.getProperty('bintray.user')
	key = System.getProperty('bintray.key')
	publications = ['mavenPublication']

	pkg {
		repo = 'maven'
		name = 'com.remondis:remap'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/remondis-it/remap.git'
	}
}

